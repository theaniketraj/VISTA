# Commenting for a sample workflow push
name: VISTA CI/CD

on:
  push:
    branches:
      - main  
    tags:
      - "v*.*.*"  # Triggers on version tags like v1.0.0
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    env:
      GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
      GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all tags are fetched

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build the VISTA plugin
        run: ./gradlew :vista-plugin:build

      - name: Publish to Maven Local (for testing)
        run: ./gradlew :vista-plugin:publishToMavenLocal

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vista-plugin-build
          path: vista-plugin/build/libs/

  publish:
    name: Publish to Gradle Plugin Portal
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Debug GitHub Ref
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
        
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Publish to Gradle Plugin Portal
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          ./gradlew :vista-plugin:publishPlugins \
            -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} \
            -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
      

      # - name: Publish to Gradle Plugin Portal
      #   if: startsWith(github.ref, 'refs/tags/v')  # Only publish when pushing a version tag
      #   run: ./gradlew :vista-plugin:publishPlugins
      #   env:
      #     GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
      #     GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}